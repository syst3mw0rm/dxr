Rust plugin
-----------

Work in progess, not ready for use.

Tracked by https://bugzilla.mozilla.org/show_bug.cgi?id=956768

This plugin is disabled by default. You need to set disabled plugins to something
other than 'rust' to use it. (TODO that is probably wrong, we need to hardcode it,
so that disable='' -> disabling rust and it needs to be explicitly enabled)

Unlike Clang there is no mechanism for plugins for Rust. So the strategy is to
hack the compiler to output dxr csvs and make it more generic later...

TODO
----

REBASE

scopes so we can query items in a module, class etc.

sort out the lhs bar

rename dxr -> dump ...

methods - check static method with specialisation
check extern mod github link

how to handle macros - are we checking the ast before or after expansion?
  - I think after, and this is kinda busted sometimes

refactor to share python code with the clang plugin?

Need to add a layer of indirection for ast ids -> db ids (in the dxr (and clang) plugin) so we
don't clash with rows from the clang plugin (or make the language part of the id or something)

compiler warnings

bugs
----

need to escape quotes in values

text search - case sensitivity bug - the 'i' in the search query screws things up
  update libtrilite

use aliases have module, not file, scope

need to take into account the path attribute when looking up modules (because attributes can screw up the names)


items
-----

type param defs + refs
lifetime param defs + refs
...

pelmers
-------

enums (jump to def, find uses of each, find all uses)
  variant refs should get values on hover
match (adds var decls)

