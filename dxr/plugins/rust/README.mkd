Rust plugin
-----------

Work in progess, not ready for use.

Tracked by https://bugzilla.mozilla.org/show_bug.cgi?id=956768

This plugin is disabled by default. You need to set disabled plugins to something
other than 'rust' to use it. (TODO that is probably wrong, we need to hardcode it,
so that disable='' -> disabling rust and it needs to be explicitly enabled)

Unlike Clang there is no mechanism for plugins for Rust. So the strategy is to
hack the compiler to output dxr csvs and make it more generic later...

TODO
----

* span-o-matic

run on rustc
  - bad span bug

* for std libs, we should be able to reconstruct path for docs, since they are regular

do spans better

? remove code for loading crates from urls
  if not, check extern mod github link

rename dxr -> dump ...
  save-analysis -> dump-analysis

refactor + style (dxr.rs)
  record macros
  factor out Option<sub_span> stuff - macro

TODOs/FIXMEs

check
  methods - check static method with specialisation

stability support

(TODO in indexer.rs) module refs in paths to outside the crate

Currently if we index fns etc. from std_libs, we don't give them the usual std_lib links,
we should give them the docs link in addition to the local links. This would
currently break things I think.
>>>>>>> fixing some bugs

references to `std` - because the import is implicit, we can't do our normal stuff, therefore
uses of std doin't get highlighted. Would be nice to have the usual 'jump to docs', etc. for
uses.


bugs
----

* types in enum variants get treated like variable decls - should be type uses

check span for module_alias on line 12 - tell pelmers - its the way we have to do mods - we don't generate overlapping spans

items
-----

type param defs + refs - pelmers
lifetime param defs + refs - pelmers
...

pelmers
-------

enums (jump to def, find uses of each, find all uses)
  variant refs should get values on hover
match (adds var decls)

next: type params, lifetime params, warnings, macros, ???
